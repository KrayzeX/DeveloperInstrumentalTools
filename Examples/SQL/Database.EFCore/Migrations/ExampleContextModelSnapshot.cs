// <auto-generated />
using System;
using Database.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Database.EFCore.Migrations
{
    [DbContext(typeof(ExampleContext))]
    partial class ExampleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Database.EFCore.Entities.BookCategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("book_category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "Novel"
                        },
                        new
                        {
                            Id = 2,
                            Code = "Adventure"
                        },
                        new
                        {
                            Id = 3,
                            Code = "Fantasy"
                        },
                        new
                        {
                            Id = 4,
                            Code = "History"
                        });
                });

            modelBuilder.Entity("Database.EFCore.Entities.BookEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Rating")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("book");

                    b.HasData(
                        new
                        {
                            Id = 1, 
                            BookCategoryEntity = 1,
                            Rating = 4.6,
                            Name = "Eugene Onegin"
                        },
                        new
                        {
                            Id = 2, 
                            BookCategoryEntity = 2,
                            Rating = 4.3,
                            Name = "Robinson Crusoe"
                        },
                        new
                        {
                            Id = 3, 
                            BookCategoryEntity = 3,
                            Rating = 4.8,
                            Name = "Lord of the Rings: The Fellowship of The Ring"
                        },
                        new 
                        {
                            Id = 4, 
                            BookCategoryEntity = 4,
                            Rating = 4.5,
                            Name = "Comparative biographies"
                        });
                });

            modelBuilder.Entity("Database.EFCore.Entities.BookEntity", b =>
                {
                    b.HasOne("Database.EFCore.Entities.BookCategoryEntity", "book_category")
                        .WithMany()
                        .HasForeignKey("CategoryId");
                });
        }
    }
}
